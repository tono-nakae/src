.\"	$NetBSD: kame_ipsec.4,v 1.3 2012/01/17 08:20:58 wiz Exp $
.\"	$KAME: ipsec.4,v 1.17 2001/06/27 15:25:10 itojun Exp $
.\"
.\" Copyright (C) 1995, 1996, 1997, and 1998 WIDE Project.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the project nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd January 16, 2012
.Dt KAME_IPSEC 4
.Os
.Sh NAME
.Nm ipsec
.Nd IP security protocol
.Sh SYNOPSIS
.In sys/types.h
.In netinet/in.h
.In netinet6/ipsec.h
.Pp
.Cd options KAME_IPSEC
.Cd options IPSEC_ESP
.Cd options IPSEC_NAT_T
.Cd options IPSEC_DEBUG
.Sh DESCRIPTION
.Nm
is the first implemtation of IPSEC in
.Nx .
It is being replaced by
.Xr fast_ipsec 4 .
.Pp
The following kernel options are available:
.Bl -ohang
.It Cd options IPSEC
Includes support for the
.Tn IPsec
protocol.
.Em IPSEC
will enable
secret key management part,
policy management part,
.Tn AH
and
.Tn IPComp .
Kernel binary will not be subject to export control in most of countries,
even if compiled with
.Em IPSEC .
For example, it should be okay to export it from the United States of America.
.Em INET6
and
.Em IPSEC
are orthogonal so you can get IPv4-only kernel with IPsec support,
IPv4/v6 dual support kernel without IPsec, and so forth.
This option requires
.Em INET
at this moment, but it should not.
.It Cd options IPSEC_DEBUG
Enables debugging code in
.Tn IPsec
stack.
This option assumes
.Em IPSEC .
.It Cd options IPSEC_ESP
Includes support for
.Tn IPsec
.Tn ESP
protocol.
.Em IPSEC_ESP
will enable source code that is subject to export control in some countries
.Pq including the United States ,
and compiled kernel binary will be subject to certain restriction.
This option assumes
.Em IPSEC .
.It Cd options IPSEC_NAT_T
Includes support for
.Tn IPsec
Network Address Translator Traversal (NAT-T), as described in RFCs 3947
and 3948.
This feature might be patent-encumbered in some countries.
This option assumes
.Em IPSEC
and
.Em IPSEC_ESP .
.El
.\"
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr socket 2 ,
.Xr ipsec_set_policy 3 ,
.Xr fast_ipsec 4 ,
.Xr icmp6 4 ,
.Xr intro 4 ,
.Xr ip6 4 ,
.Xr ipsec 4 ,
.Xr racoon 8 ,
.Xr setkey 8 ,
.Xr sysctl 8
.Sh STANDARDS
.Rs
.%A Daniel L. McDonald
.%A Craig Metz
.%A Bao G. Phan
.%T "PF_KEY Key Management API, Version 2"
.%R RFC
.%N 2367
.Re
.Sh HISTORY
The implementation described herein appeared in WIDE/KAME IPv6/IPsec stack.
.Sh BUGS
The IPsec support is subject to change as the IPsec protocols develop.
.Pp
There is no single standard for policy engine API,
so the policy engine API described herein is just for KAME implementation.
.Pp
AH and tunnel mode encapsulation may not work as you might expect.
If you configure inbound
.Dq require
policy against AH tunnel or any IPsec encapsulating policy with AH
.Po
like
.Dq Li esp/tunnel/A-B/use ah/transport/A-B/require
.Pc ,
tunneled packets will be rejected.
This is because we enforce policy check on inner packet on reception,
and AH authenticates encapsulating
.Pq outer
packet, not the encapsulated
.Pq inner
packet
.Po
so for the receiving kernel there's no sign of authenticity
.Pc .
The issue will be solved when we revamp our policy engine to keep all the
packet decapsulation history.
.Pp
Under certain condition,
truncated result may be raised from the kernel
against
.Dv SADB_DUMP
and
.Dv SADB_SPDDUMP
operation on
.Dv PF_KEY
socket.
This occurs if there are too many database entries in the kernel
and socket buffer for the
.Dv PF_KEY
socket is insufficient.
If you manipulate many IPsec key/policy database entries,
increase the size of socket buffer or use
.Xr sysctl 8
interface.
