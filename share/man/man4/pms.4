.\" $NetBSD: pms.4,v 1.16 2004/12/28 20:59:32 christos Exp $
.\"
.\" Copyright (c) 1993 Christopher G. Demetriou
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"          This product includes software developed for the
.\"          NetBSD Project.  See http://www.NetBSD.org/ for
.\"          information about NetBSD.
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" <<Id: LICENSE,v 1.2 2000/06/14 15:57:33 cgd Exp>>
.\"
.Dd December 28, 2004
.Dt PMS 4
.Os
.Sh NAME
.Nm pms
.Nd PS/2 auxiliary port mouse driver
.Sh SYNOPSIS
.Cd pckbc* at isa?
.Cd pms* at pckbc?
.Cd wsmouse* at pms?
.Pp
.Cd options PMS_DISABLE_POWERHOOK
.Sh DESCRIPTION
The
.Nm
driver provides an interface to PS/2 auxiliary port mice within the
.Xr wscons 4
framework. Parent device in terms of the autoconfiguration framework is
.Xr pckbc 4 ,
the PC keyboard controller.
.Dq pms
is a generic driver which supports mice using common variants of the PS/2
protocol, including wheel mice of the
.Dq IntelliMouse
breed.
Wheel movements are mapped to a third (z-) axis.
The driver is
believed to work with both 3-button and 5-button mice with scroll wheels.
Mice which use other protocol extensions are not currently supported, but
might be if protocol documentation could be found.
Mouse related data are accessed by
.Xr wsmouse 4
devices.
.Pp
The
.Nm
driver has been updated to attempt to renegotiate mouse protocol after seeing
suspicious or defective mouse protocol packets, or unusual delays in the
middle of a packet; this should improve the chances that a mouse will recover
after being switched away or reset (for instance, by a console switch).
.Pp
The
.Va PMS_DISABLE_POWERHOOK
kernel option disables PS/2 reset on resume.
.Pp
In addition, the
.Nm
driver supports the
.Dq Synaptics
pad.
The following
.Xr sysctl 8 
variables control the pad's behavior:
.Bl -tag
.It Dv hw.synaptics.emulate_mid
Emulate the middle button by pressing both buttons (default 0).
.It Dv hw.synaptics.slow_limit
Distance in pixels that is considered to be a slow (high-res) move.
(default 900)
.It Dv hw.synaptics.tap_enable
Enable tapping on the pad to behave like a mouse click (default 1).
.It Dv hw.synaptics.tap_length
Time in microseconds that the pad needs to be pressed to be considered a tap
(default 200000).
.It Dv hw.synaptics.tap_tolerance
Tolerance in pixels we can move on the pad and still considered a tap
(default 500).
.El
.Sh SEE ALSO
.Xr pckbc 4 ,
.Xr ums 4 ,
.Xr wsmouse 4
.Sh AUTHORS
The
.Nm
driver was originally written by Christopher G. Demetriou.
The changes to merge the
.Dq IntelliMouse
protocol in, and reset the mouse in the event of protocol problems, were
contributed by Peter Seebach.
Special thanks to Ray Trent, at Synaptics, who contributed valuable
insight into how to identify bogus mouse data.
The changes to add
.Dq Synaptics
pad support were by Ales Krenek and Kentaro A. Kurahone.
.Sh BUGS
It is possible for the driver to mistakenly negotiate the non-scroll-wheel
protocol, after which it is unlikely to recover until the device is closed
and reopened.
