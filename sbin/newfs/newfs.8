.\"	$NetBSD: newfs.8,v 1.45 2002/10/01 13:40:45 wiz Exp $
.\"
.\" Copyright (c) 1983, 1987, 1991, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)newfs.8	8.6 (Berkeley) 5/3/95
.\"
.Dd February 20, 2002
.Dt NEWFS 8
.Os
.Sh NAME
.Nm newfs
.Nd construct a new file system
.Sh SYNOPSIS
.Nm ""
.Op Fl B Ar byte-order
.Op Fl FINOZ
.Op Fl S Ar sector-size
.Op Fl T Ar disk-type
.Op Fl a Ar maxcontig
.Op Fl b Ar block-size
.Op Fl c Ar cpg
.Op Fl d Ar rotdelay
.Op Fl e Ar maxbpg
.Op Fl f Ar frag-size
.Op Fl g Ar avgfilesize
.Op Fl h Ar avgfpdir
.Op Fl i Ar bytes-per-inode
.Op Fl k Ar skew
.Op Fl l Ar interleave
.Op Fl m Ar free-space
.Op Fl n Ar rotational-positions
.Op Fl o Ar optimization
.Op Fl p Ar track-spares
.Op Fl r Ar revolutions
.Op Fl s Ar size
.Op Fl t Ar ntracks
.Op Fl u Ar nsectors
.Op Fl v Ar volname
.Op Fl x Ar sectors
.Ar special
.Sh DESCRIPTION
.Nm
is used to initialize and clear file systems before first use.
Before running
.Nm
the disk must be labeled using
.Xr disklabel 8 .
.Nm
builds a file system on the specified special device
basing its defaults on the information in the disk label.
Typically the defaults are reasonable, however
.Nm
has numerous options to allow the defaults to be selectively overridden.
.Pp
Options with numeric arguments may contain an optional (case-insensitive)
suffix:
.Bl -tag -width 3n -offset indent -compact
.It b
Bytes; causes no modification.
(Default)
.It k
Kilo; multiply the argument by 1024
.It m
Mega; multiply the argument by 1048576
.It g
Giga; multiply the argument by 1073741824
.El
.Pp
The following options define the general layout policies.
.Bl -tag -width Fl
.It Fl B Ar byte-order
Specify the metadata byte order of the file system to be created.
Valid byte orders are `be' and `le'.
If no byte order is specified, the file system is created in host
byte order.
.It Fl F
Create a file system image in
.Ar special .
The file system size needs to be specified with
.Dq Fl s Ar size .
No attempts to use or update the disk label will be made.
.It Fl I
Do not require that the file system type listed in the disk label is
.Ql 4.2BSD
or
.Ql Apple UFS .
.It Fl N
Causes the file system parameters to be printed out
without really creating the file system.
.It Fl O
Creates a
.Bx 4.3
format file system.
This option is primarily used to build root file systems
that can be understood by older boot ROMs.
.It Fl T Ar disk-type
Uses information for the specified disk from
.Pa /etc/disktab
instead of trying to get the information from the disk label.
.It Fl Z
Pre-zeros the file system image created with
.Fl F .
This is necessary if the image is to be used by
.Xr vnd 4
(which doesn't support file systems with
.Sq holes ) .
.It Fl a Ar maxcontig
This specifies the maximum number of contiguous blocks that will be
laid out before forcing a rotational delay (see the
.Fl d
option).
The default value is 8.
See
.Xr tunefs 8
for more details on how to set this option.
.It Fl b Ar block-size
The block size of the file system, in bytes.
It must be a power of two.
The smallest allowable size is 4096 bytes.
The default size depends upon the size of the file system:
.Pp
.Bl -tag -width "file system size" -compact -offset indent
.It Sy "file system size"
.Ar block-size
.It \&\*[Lt] 20 MB
4 KB
.It \&\*[Lt] 1024 MB
8 KB
.It \&\*[Gt]\&= 1024 MB
16 KB
.El
.It Fl c Ar cpg
The number of cylinders per cylinder group in a file system.
The default is to compute the maximum allowed by the other parameters.
This value is dependent on a number of other parameters, in particular
the block size and the number of bytes per inode.
.It Fl d Ar rotdelay
This specifies the expected time (in milliseconds) to service a transfer
completion interrupt and initiate a new transfer on the same disk.
The default is 0 milliseconds.
See
.Xr tunefs 8
for more details on how to set this option.
.ne 1i
.It Fl e Ar maxbpg
This indicates the maximum number of blocks any single file can
allocate out of a cylinder group before it is forced to begin
allocating blocks from another cylinder group.
The default is about one quarter of the total blocks in a cylinder group.
See
.Xr tunefs 8
for more details on how to set this option.
.It Fl f Ar frag-size
The fragment size of the file system in bytes.
It must be a power of two ranging in value between
.Ar block-size Ns /8
and
.Ar block-size .
The optimal
.Ar block-size : Ns Ar frag-size
ratio is 8:1.
Other ratios are possible, but are not recommended,
and may produce unpredictable results.
The default size depends upon the size of the file system:
.Pp
.Bl -tag -width "file system size" -compact -offset indent
.It Sy "file system size"
.Ar frag-size
.It \&\*[Lt] 20 MB
0.5 KB
.It \&\*[Lt] 1024 MB
1 KB
.It \&\*[Gt]\&= 1024 MB
2 KB
.El
.It Fl g Ar avgfilesize
The expected average file size for the file system.
.It Fl h Ar avgfpdir
The expected average number of files per directory on the file system.
.It Fl i Ar bytes-per-inode
This specifies the density of inodes in the file system.
If fewer inodes are desired, a larger number should be used;
to create more inodes a smaller number should be given.
The default is to create an inode for every
.Pq 4 * Ar frag-size
bytes of data space:
.Pp
.Bl -tag -width "file system size" -compact -offset indent
.It Sy "file system size"
.Ar bytes-per-inode
.It \&\*[Lt] 20 MB
2 KB
.It \&\*[Lt] 1024 MB
4 KB
.It \&\*[Gt]\&= 1024 MB
8 KB
.El
.It Fl m Ar free-space
The percentage of space reserved from normal users; the minimum free
space threshold.
The default value used is 5%.
See
.Xr tunefs 8
for more details on how to set this option.
.It Fl n Ar rotational-positions
Determines how many rotational time slots there are in
one revolution of the disk.
.It Fl o Ar optimization
Optimization preference; either
.Dq space
or
.Dq time .
The file system can either be instructed to try to minimize the time spent
allocating blocks, or to try to minimize the space fragmentation on the disk.
If the value of minfree (see above) is less than 5%,
the default is to optimize for space;
if the value of minfree is greater than or equal to 5%,
the default is to optimize for time.
See
.Xr tunefs 8
for more details on how to set this option.
.It Fl s Ar size
The size of the file system in sectors.
An
.Sq s
suffix will be interpreted as the number of sectors (the default).
All other suffixes are interpreted as per other numeric arguments,
except that the number is converted into sectors by dividing by the
sector size (as specified by
.Fl S Ar secsize )
after suffix interpretation.
.It Fl v Ar volname
This specifies that a Apple UFS filesystem should be created
with the given volume name.
.El
.Pp
The following options override the standard sizes for the disk geometry.
Their default values are taken from the disk label.
Changing these defaults is useful only when using
.Nm
to build a file system whose raw image will eventually be used on a
different type of disk than the one on which it is initially created
(for example on a write-once disk).
Note that changing any of these values from their defaults will make
it impossible for
.Xr fsck_ffs 8
to find the alternative superblocks if the standard superblock is lost.
.Bl -tag -width Fl
.It Fl S Ar sector-size
The size of a sector in bytes (almost never anything but 512).
Defaults to 512.
.It Fl k Ar skew
Sector \&0 skew, per track.
Used to describe perturbations in the media format to compensate for
a slow controller.
Track skew is the offset of sector 0 on track N relative to sector 0
on track N-1 on the same cylinder.
.It Fl l Ar interleave
Hardware sector interleave.
Used to describe perturbations in the media format to compensate for
a slow controller.
Interleave is physical sector interleave on each track,
specified as the denominator of the ratio:
.Dl sectors read/sectors passed over
Thus an interleave of 1/1 implies contiguous layout, while 1/2 implies
logical sector 0 is separated by one sector from logical sector 1.
.It Fl p Ar track-spares
Spare sectors per track.
Spare sectors (bad sector replacements) are physical sectors that occupy
space at the end of each track.
They are not counted as part of the sectors per track
.Pq Fl u
since they are not available to the file system for data allocation.
.It Fl r Ar revolutions
The speed of the disk in revolutions per minute.
.ne 1i
.It Fl t Ar ntracks
The number of tracks per cylinder available for data allocation by the file
system.
.It Fl u Ar nsectors
The number of sectors per track available for data allocation by the file
system.
This does not include sectors reserved at the end of each track for bad
block replacement (see the
.Fl p
option).
.It Fl x Ar spare-sectors-per-cylinder
Spare sectors (bad sector replacements) are physical sectors that occupy
space at the end of the last track in the cylinder.
They are deducted from the sectors per track
.Pq Fl u
of the last track of each cylinder since they are not available to the file
system for data allocation.
.El
.Sh NOTES
If the file system will be exported over NFS, the
.Xr fsirand 8
utility should be run after
.Nm
to improve security.
.Pp
The owner and group ids of the root node of the new file system
are set to the effective uid and gid of the user initializing
the file system.
.Pp
For the
.Nm
command to succeed,
the disk label should first be updated such that the fstype field for the
partition is set to
.Ql 4.2BSD
or
.Ql Apple UFS ,
unless
.Fl F
or
.Fl I
is used.
.Sh SEE ALSO
.Xr disktab 5 ,
.Xr fs 5 ,
.Xr disklabel 8 ,
.Xr diskpart 8 ,
.Xr dumpfs 8 ,
.\" .Xr format 8 ,
.Xr fsck_ffs 8 ,
.Xr fsirand 8 ,
.Xr mount 8 ,
.Xr mount_mfs 8 ,
.Xr tunefs 8
.Rs
.%A M. McKusick
.%A W. Joy
.%A S. Leffler
.%A R. Fabry
.%T A Fast File System for UNIX ,
.%J ACM Transactions on Computer Systems 2
.%V 3
.%P pp 181-197
.%D August 1984
.%O (reprinted in the BSD System Manager's Manual)
.Re
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.2 .
