#	$NetBSD: Makefile,v 1.12 1998/05/06 14:37:42 mycroft Exp $

.PATH: ${.CURDIR}/../../../dist/gcc/cp ${.CURDIR}/../../../dist/gcc/cp/inc
LIB=	gcc
NOLINT=		nolint (gcc private fns library)
NOPROFILE=
NOPIC=

#LIB1OBJS= _mulsi3.o _udivsi3.o _divsi3.o _umodsi3.o _modsi3.o _lshrsi3.o \
#	  _lshlsi3.o _ashrsi3.o _ashlsi3.o _divdf3.o _muldf3.o _negdf2.o \
#	  _adddf3.o _subdf3.o _fixdfsi.o _fixsfsi.o _floatsidf.o _floatsisf.o \
#	  _truncdfsf2.o _extendsfdf2.o _addsf3.o _negsf2.o _subsf3.o \
#	  _mulsf3.o _divsf3.o _eqdf2.o _nedf2.o _gtdf2.o _gedf2.o _ltdf2.o \
#	  _ledf2.o _eqsf2.o _nesf2.o _gtsf2.o _gesf2.o _ltsf2.o _lesf2.o

#LIB2OBJS= _muldi3.o _divdi3.o _moddi3.o _udivdi3.o _umoddi3.o _negdi2.o \
#	  _lshrdi3.o _lshldi3.o _ashldi3.o _ashrdi3.o _ffsdi2.o \
#	  _udiv_w_sdiv.o _udivmoddi4.o _cmpdi2.o _ucmpdi2.o _floatdidf.o \
#	  _floatdisf.o _fixunsdfsi.o _fixunssfsi.o _fixunsdfdi.o _fixdfdi.o \
#	  _fixunssfdi.o _fixsfdi.o _fixxfdi.o _fixunsxfdi.o _floatdixf.o \
#	  _fixunsxfsi.o

LIB2OBJS+=__gcc_bcmp.o _varargs.o _eprintf.o _op_new.o _new_handler.o \
	  _op_delete.o _bb.o _shtab.o _clear_cache.o _trampoline.o __main.o \
	  _exit.o _ctors.o _op_vdel.o _op_vnew.o _pure.o __dummy.o

HAVE_GCC28!= ${CXX} --version | egrep "^(2\.8|egcs)" ; echo 

# Extra code to include in libgcc2 for C++ support.
.if (${HAVE_GCC28} != "")
SRCS+=		tinfo.cc tinfo2.cc new.cc new1.cc new2.cc exception.cc frame.c
CXXFLAGS+=	-I${DIST}/cp/inc
LIB2OBJS+=	_eh.o
INCS=		exception new new.h typeinfo
INCSDIR=	/usr/include/g++

# XXX Workaround the .cc -> (NULL) extension rule
.cc:
	@true
.endif

.if (${MACHINE_ARCH} == "m68k") || (${MACHINE_ARCH} == "i386")
LIB2OBJS+=_fixxfdi.o _fixunsxfdi.o _floatdixf.o _fixunsxfsi.o
.elif (${MACHINE_ARCH} == "powerpc")
LIB2OBJS+=_muldi3.o _divdi3.o _moddi3.o _udivdi3.o _umoddi3.o _negdi2.o \
	  _lshrdi3.o _lshldi3.o _ashldi3.o _ashrdi3.o _ffsdi2.o \
	  _udiv_w_sdiv.o _udivmoddi4.o _cmpdi2.o _ucmpdi2.o _floatdidf.o \
	  _floatdisf.o _fixunsdfsi.o _fixunssfsi.o _fixunsdfdi.o _fixdfdi.o \
	  _fixunssfdi.o _fixsfdi.o
.endif

OBJS= ${LIB1OBJS} ${LIB2OBJS}
#LIB1SOBJS=${LIB1OBJS:.o=.so}
LIB2SOBJS=${LIB2OBJS:.o=.so}

#${LIB1OBJS}: libgcc1.c
#	${COMPILE.c} -DL${.PREFIX} -o ${.TARGET} ${DIST}/libgcc1.c
#	@${LD} -x -r ${.TARGET}
#	@mv a.out ${.TARGET}

${LIB2OBJS}: libgcc2.c
	${COMPILE.c} -DL${.PREFIX} -o ${.TARGET} ${DIST}/libgcc2.c
	@${LD} -x -r ${.TARGET}
	@mv a.out ${.TARGET}

#${LIB1SOBJS}: libgcc1.c
#	${COMPILE.c} -fpic -DL${.PREFIX} -o ${.TARGET} ${DIST}/libgcc1.c

${LIB2SOBJS}: libgcc2.c
	${COMPILE.c} -fpic -DL${.PREFIX} -o ${.TARGET} ${DIST}/libgcc2.c

afterinstall:
	@if [ ! -f ${.OBJDIR}/_eh.o ]; then\
		echo '***** You should rebuild and reinstall libgcc.a using the new egcs'; \
		echo '***** compiler in order to include all the necessary C++ support.'; \
	fi

.include <bsd.lib.mk>
