/*
 * System call argument lists.
 *
 * DO NOT EDIT-- this file is automatically generated.
 * created from	NetBSD: syscalls.master,v 1.31 1995/07/05 13:14:17 pk Exp 
 */

#define	syscallarg(x)	union { x datum; register_t pad; }

struct sunos_open_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
	syscallarg(int) mode;
};

struct sunos_wait4_args {
	syscallarg(int) pid;
	syscallarg(int *) status;
	syscallarg(int) options;
	syscallarg(struct rusage *) rusage;
};

struct sunos_creat_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct sunos_execv_args {
	syscallarg(char *) path;
	syscallarg(char **) argp;
};

struct sunos_mknod_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
	syscallarg(int) dev;
};

struct sunos_ptrace_args {
	syscallarg(int) req;
	syscallarg(int) pid;
	syscallarg(char *) addr;
	syscallarg(int) data;
	syscallarg(char *) addr2;
};

struct sunos_access_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
};

struct sunos_stat_args {
	syscallarg(char *) path;
	syscallarg(struct ostat *) ub;
};

struct sunos_lstat_args {
	syscallarg(char *) path;
	syscallarg(struct ostat *) ub;
};

struct sunos_mctl_args {
	syscallarg(caddr_t) addr;
	syscallarg(int) len;
	syscallarg(int) func;
	syscallarg(void *) arg;
};

struct sunos_ioctl_args {
	syscallarg(int) fd;
	syscallarg(u_long) com;
	syscallarg(caddr_t) data;
};

struct sunos_reboot_args {
	syscallarg(int) howto;
	syscallarg(char *) bootstr;
};

struct sunos_omsync_args {
	syscallarg(caddr_t) addr;
	syscallarg(int) len;
	syscallarg(int) flags;
};

struct sunos_mmap_args {
	syscallarg(caddr_t) addr;
	syscallarg(int) len;
	syscallarg(int) prot;
	syscallarg(u_int) flags;
	syscallarg(int) fd;
	syscallarg(long) pos;
};

struct sunos_setpgid_args {
	syscallarg(int) pid;
	syscallarg(int) pgid;
};

struct sunos_setsockopt_args {
	syscallarg(int) s;
	syscallarg(int) level;
	syscallarg(int) name;
	syscallarg(caddr_t) val;
	syscallarg(int) valsize;
};

struct sunos_sigvec_args {
	syscallarg(int) signum;
	syscallarg(struct sigvec *) nsv;
	syscallarg(struct sigvec *) osv;
};

struct sunos_sigreturn_args {
	syscallarg(struct sigcontext *) sigcntxp;
};

struct sunos_getrlimit_args {
	syscallarg(u_int) which;
	syscallarg(struct orlimit *) rlp;
};

struct sunos_setrlimit_args {
	syscallarg(u_int) which;
	syscallarg(struct orlimit *) rlp;
};

struct sunos_poll_args {
	syscallarg(struct sunos_pollfd *) fds;
	syscallarg(long) nfds;
	syscallarg(int) timeout;
};

struct sunos_nfssvc_args {
	syscallarg(int) fd;
};

struct sunos_statfs_args {
	syscallarg(char *) path;
	syscallarg(struct sunos_statfs *) buf;
};

struct sunos_fstatfs_args {
	syscallarg(int) fd;
	syscallarg(struct sunos_statfs *) buf;
};

struct sunos_unmount_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
};

struct sunos_quotactl_args {
	syscallarg(int) cmd;
	syscallarg(char *) special;
	syscallarg(int) uid;
	syscallarg(caddr_t) addr;
};

struct sunos_exportfs_args {
	syscallarg(char *) path;
	syscallarg(char *) ex;
};

struct sunos_mount_args {
	syscallarg(char *) type;
	syscallarg(char *) dir;
	syscallarg(int) flags;
	syscallarg(caddr_t) data;
};

struct sunos_ustat_args {
	syscallarg(int) dev;
	syscallarg(struct sunos_ustat *) buf;
};

struct sunos_auditsys_args {
	syscallarg(char *) record;
};

struct sunos_getdents_args {
	syscallarg(int) fd;
	syscallarg(char *) buf;
	syscallarg(int) nbytes;
};

struct sunos_fchroot_args {
	syscallarg(int) fd;
};

struct sunos_sigpending_args {
	syscallarg(int *) mask;
};

struct sunos_sysconf_args {
	syscallarg(int) name;
};

struct sunos_uname_args {
	syscallarg(struct sunos_utsname *) name;
};

#undef	syscallarg

/*
 * System call prototypes.
 */

int	nosys	__P((struct proc *, void *, register_t *));
int	exit	__P((struct proc *, void *, register_t *));
int	fork	__P((struct proc *, void *, register_t *));
int	read	__P((struct proc *, void *, register_t *));
int	write	__P((struct proc *, void *, register_t *));
int	sunos_open	__P((struct proc *, void *, register_t *));
int	close	__P((struct proc *, void *, register_t *));
int	sunos_wait4	__P((struct proc *, void *, register_t *));
int	sunos_creat	__P((struct proc *, void *, register_t *));
int	link	__P((struct proc *, void *, register_t *));
int	unlink	__P((struct proc *, void *, register_t *));
int	sunos_execv	__P((struct proc *, void *, register_t *));
int	chdir	__P((struct proc *, void *, register_t *));
int	sunos_mknod	__P((struct proc *, void *, register_t *));
int	chmod	__P((struct proc *, void *, register_t *));
int	chown	__P((struct proc *, void *, register_t *));
int	obreak	__P((struct proc *, void *, register_t *));
int	compat_43_lseek	__P((struct proc *, void *, register_t *));
int	getpid	__P((struct proc *, void *, register_t *));
int	setuid	__P((struct proc *, void *, register_t *));
int	getuid	__P((struct proc *, void *, register_t *));
int	sunos_ptrace	__P((struct proc *, void *, register_t *));
int	sunos_access	__P((struct proc *, void *, register_t *));
int	sync	__P((struct proc *, void *, register_t *));
int	kill	__P((struct proc *, void *, register_t *));
int	sunos_stat	__P((struct proc *, void *, register_t *));
int	sunos_lstat	__P((struct proc *, void *, register_t *));
int	dup	__P((struct proc *, void *, register_t *));
int	pipe	__P((struct proc *, void *, register_t *));
int	profil	__P((struct proc *, void *, register_t *));
int	setgid	__P((struct proc *, void *, register_t *));
int	getgid	__P((struct proc *, void *, register_t *));
int	acct	__P((struct proc *, void *, register_t *));
int	sunos_mctl	__P((struct proc *, void *, register_t *));
int	sunos_ioctl	__P((struct proc *, void *, register_t *));
int	sunos_reboot	__P((struct proc *, void *, register_t *));
int	symlink	__P((struct proc *, void *, register_t *));
int	readlink	__P((struct proc *, void *, register_t *));
int	execve	__P((struct proc *, void *, register_t *));
int	umask	__P((struct proc *, void *, register_t *));
int	chroot	__P((struct proc *, void *, register_t *));
int	compat_43_fstat	__P((struct proc *, void *, register_t *));
int	compat_43_getpagesize	__P((struct proc *, void *, register_t *));
int	sunos_omsync	__P((struct proc *, void *, register_t *));
int	vfork	__P((struct proc *, void *, register_t *));
int	sbrk	__P((struct proc *, void *, register_t *));
int	sstk	__P((struct proc *, void *, register_t *));
int	sunos_mmap	__P((struct proc *, void *, register_t *));
int	ovadvise	__P((struct proc *, void *, register_t *));
int	munmap	__P((struct proc *, void *, register_t *));
int	mprotect	__P((struct proc *, void *, register_t *));
int	madvise	__P((struct proc *, void *, register_t *));
int	sunos_vhangup	__P((struct proc *, void *, register_t *));
int	mincore	__P((struct proc *, void *, register_t *));
int	getgroups	__P((struct proc *, void *, register_t *));
int	setgroups	__P((struct proc *, void *, register_t *));
int	getpgrp	__P((struct proc *, void *, register_t *));
int	sunos_setpgid	__P((struct proc *, void *, register_t *));
int	setitimer	__P((struct proc *, void *, register_t *));
int	swapon	__P((struct proc *, void *, register_t *));
int	getitimer	__P((struct proc *, void *, register_t *));
int	compat_43_gethostname	__P((struct proc *, void *, register_t *));
int	compat_43_sethostname	__P((struct proc *, void *, register_t *));
int	compat_43_getdtablesize	__P((struct proc *, void *, register_t *));
int	dup2	__P((struct proc *, void *, register_t *));
int	fcntl	__P((struct proc *, void *, register_t *));
int	select	__P((struct proc *, void *, register_t *));
int	fsync	__P((struct proc *, void *, register_t *));
int	setpriority	__P((struct proc *, void *, register_t *));
int	socket	__P((struct proc *, void *, register_t *));
int	connect	__P((struct proc *, void *, register_t *));
int	compat_43_accept	__P((struct proc *, void *, register_t *));
int	getpriority	__P((struct proc *, void *, register_t *));
int	compat_43_send	__P((struct proc *, void *, register_t *));
int	compat_43_recv	__P((struct proc *, void *, register_t *));
int	bind	__P((struct proc *, void *, register_t *));
int	sunos_setsockopt	__P((struct proc *, void *, register_t *));
int	listen	__P((struct proc *, void *, register_t *));
int	sunos_sigvec	__P((struct proc *, void *, register_t *));
int	compat_43_sigblock	__P((struct proc *, void *, register_t *));
int	compat_43_sigsetmask	__P((struct proc *, void *, register_t *));
int	sigsuspend	__P((struct proc *, void *, register_t *));
int	compat_43_sigstack	__P((struct proc *, void *, register_t *));
int	compat_43_recvmsg	__P((struct proc *, void *, register_t *));
int	compat_43_sendmsg	__P((struct proc *, void *, register_t *));
int	gettimeofday	__P((struct proc *, void *, register_t *));
int	getrusage	__P((struct proc *, void *, register_t *));
int	getsockopt	__P((struct proc *, void *, register_t *));
int	readv	__P((struct proc *, void *, register_t *));
int	writev	__P((struct proc *, void *, register_t *));
int	settimeofday	__P((struct proc *, void *, register_t *));
int	fchown	__P((struct proc *, void *, register_t *));
int	fchmod	__P((struct proc *, void *, register_t *));
int	compat_43_recvfrom	__P((struct proc *, void *, register_t *));
int	compat_43_setreuid	__P((struct proc *, void *, register_t *));
int	compat_43_setregid	__P((struct proc *, void *, register_t *));
int	rename	__P((struct proc *, void *, register_t *));
int	compat_43_truncate	__P((struct proc *, void *, register_t *));
int	compat_43_ftruncate	__P((struct proc *, void *, register_t *));
int	flock	__P((struct proc *, void *, register_t *));
int	sendto	__P((struct proc *, void *, register_t *));
int	shutdown	__P((struct proc *, void *, register_t *));
int	socketpair	__P((struct proc *, void *, register_t *));
int	mkdir	__P((struct proc *, void *, register_t *));
int	rmdir	__P((struct proc *, void *, register_t *));
int	utimes	__P((struct proc *, void *, register_t *));
int	sunos_sigreturn	__P((struct proc *, void *, register_t *));
int	adjtime	__P((struct proc *, void *, register_t *));
int	compat_43_getpeername	__P((struct proc *, void *, register_t *));
int	compat_43_gethostid	__P((struct proc *, void *, register_t *));
int	sunos_getrlimit	__P((struct proc *, void *, register_t *));
int	sunos_setrlimit	__P((struct proc *, void *, register_t *));
int	compat_43_killpg	__P((struct proc *, void *, register_t *));
int	compat_43_getsockname	__P((struct proc *, void *, register_t *));
int	sunos_poll	__P((struct proc *, void *, register_t *));
#ifdef NFSSERVER
int	sunos_nfssvc	__P((struct proc *, void *, register_t *));
#else
#endif
int	getdirentries	__P((struct proc *, void *, register_t *));
int	sunos_statfs	__P((struct proc *, void *, register_t *));
int	sunos_fstatfs	__P((struct proc *, void *, register_t *));
int	sunos_unmount	__P((struct proc *, void *, register_t *));
#ifdef NFSCLIENT
int	async_daemon	__P((struct proc *, void *, register_t *));
int	getfh	__P((struct proc *, void *, register_t *));
#else
#endif
int	compat_09_getdomainname	__P((struct proc *, void *, register_t *));
int	compat_09_setdomainname	__P((struct proc *, void *, register_t *));
int	sunos_quotactl	__P((struct proc *, void *, register_t *));
int	sunos_exportfs	__P((struct proc *, void *, register_t *));
int	sunos_mount	__P((struct proc *, void *, register_t *));
int	sunos_ustat	__P((struct proc *, void *, register_t *));
#ifdef SYSVSEM
int	compat_10_semsys	__P((struct proc *, void *, register_t *));
#else
#endif
#ifdef SYSVMSG
int	compat_10_msgsys	__P((struct proc *, void *, register_t *));
#else
#endif
#ifdef SYSVSHM
int	compat_10_shmsys	__P((struct proc *, void *, register_t *));
#else
#endif
int	sunos_auditsys	__P((struct proc *, void *, register_t *));
int	sunos_getdents	__P((struct proc *, void *, register_t *));
int	setsid	__P((struct proc *, void *, register_t *));
int	fchdir	__P((struct proc *, void *, register_t *));
int	sunos_fchroot	__P((struct proc *, void *, register_t *));
int	sunos_sigpending	__P((struct proc *, void *, register_t *));
int	setpgid	__P((struct proc *, void *, register_t *));
int	pathconf	__P((struct proc *, void *, register_t *));
int	fpathconf	__P((struct proc *, void *, register_t *));
int	sunos_sysconf	__P((struct proc *, void *, register_t *));
int	sunos_uname	__P((struct proc *, void *, register_t *));

#ifdef COMPAT_43
#define compat_43(func) __CONCAT(compat_43_,func)

#ifdef NFSSERVER
#else
#endif
#ifdef NFSCLIENT
#else
#endif
#ifdef SYSVSEM
#else
#endif
#ifdef SYSVMSG
#else
#endif
#ifdef SYSVSHM
#else
#endif

#else /* COMPAT_43 */
#define compat_43(func) nosys
#endif /* COMPAT_43 */


#ifdef COMPAT_09
#define compat_09(func) __CONCAT(compat_09_,func)

#ifdef NFSSERVER
#else
#endif
#ifdef NFSCLIENT
#else
#endif
#ifdef SYSVSEM
#else
#endif
#ifdef SYSVMSG
#else
#endif
#ifdef SYSVSHM
#else
#endif

#else /* COMPAT_09 */
#define compat_09(func) nosys
#endif /* COMPAT_09 */


#ifdef COMPAT_10
#define compat_10(func) __CONCAT(compat_10_,func)

#ifdef NFSSERVER
#else
#endif
#ifdef NFSCLIENT
#else
#endif
#ifdef SYSVSEM
#else
#endif
#ifdef SYSVMSG
#else
#endif
#ifdef SYSVSHM
#else
#endif

#else /* COMPAT_10 */
#define compat_10(func) nosys
#endif /* COMPAT_10 */

