/*
 * System call argument lists.
 *
 * DO NOT EDIT-- this file is automatically generated.
 * created from	NetBSD: syscalls.master,v 1.5 1995/08/14 01:27:43 mycroft Exp 
 */

#define	syscallarg(x)	union { x datum; register_t pad; }

struct ibcs2_read_args {
	syscallarg(int) fd;
	syscallarg(char *) buf;
	syscallarg(u_int) nbytes;
};

struct ibcs2_open_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
	syscallarg(int) mode;
};

struct ibcs2_waitsys_args {
	syscallarg(int) a1;
	syscallarg(int) a2;
	syscallarg(int) a3;
};

struct ibcs2_creat_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct ibcs2_unlink_args {
	syscallarg(char *) path;
};

struct ibcs2_execv_args {
	syscallarg(char *) path;
	syscallarg(char **) argp;
};

struct ibcs2_chdir_args {
	syscallarg(char *) path;
};

struct ibcs2_time_args {
	syscallarg(ibcs2_time_t *) tp;
};

struct ibcs2_mknod_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
	syscallarg(int) dev;
};

struct ibcs2_chmod_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct ibcs2_chown_args {
	syscallarg(char *) path;
	syscallarg(int) uid;
	syscallarg(int) gid;
};

struct ibcs2_stat_args {
	syscallarg(char *) path;
	syscallarg(struct ibcs2_stat *) st;
};

struct ibcs2_mount_args {
	syscallarg(char *) special;
	syscallarg(char *) dir;
	syscallarg(int) flags;
	syscallarg(int) fstype;
	syscallarg(char *) data;
	syscallarg(int) len;
};

struct ibcs2_umount_args {
	syscallarg(char *) name;
};

struct ibcs2_setuid_args {
	syscallarg(int) uid;
};

struct ibcs2_stime_args {
	syscallarg(long *) timep;
};

struct ibcs2_alarm_args {
	syscallarg(unsigned) sec;
};

struct ibcs2_fstat_args {
	syscallarg(int) fd;
	syscallarg(struct ibcs2_stat *) st;
};

struct ibcs2_utime_args {
	syscallarg(char *) path;
	syscallarg(struct ibcs2_utimbuf *) buf;
};

struct ibcs2_access_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
};

struct ibcs2_nice_args {
	syscallarg(int) incr;
};

struct ibcs2_statfs_args {
	syscallarg(char *) path;
	syscallarg(struct ibcs2_statfs *) buf;
	syscallarg(int) len;
	syscallarg(int) fstype;
};

struct ibcs2_kill_args {
	syscallarg(int) pid;
	syscallarg(int) signo;
};

struct ibcs2_fstatfs_args {
	syscallarg(int) fd;
	syscallarg(struct ibcs2_statfs *) buf;
	syscallarg(int) len;
	syscallarg(int) fstype;
};

struct ibcs2_pgrpsys_args {
	syscallarg(int) type;
	syscallarg(caddr_t) dummy;
	syscallarg(int) pid;
	syscallarg(int) pgid;
};

struct ibcs2_times_args {
	syscallarg(struct tms *) tp;
};

struct ibcs2_plock_args {
	syscallarg(int) cmd;
};

struct ibcs2_setgid_args {
	syscallarg(int) gid;
};

struct ibcs2_sigsys_args {
	syscallarg(int) sig;
	syscallarg(ibcs2_sig_t) fp;
};

struct ibcs2_msgsys_args {
	syscallarg(int) which;
	syscallarg(int) a2;
	syscallarg(int) a3;
	syscallarg(int) a4;
	syscallarg(int) a5;
	syscallarg(int) a6;
};

struct ibcs2_shmsys_args {
	syscallarg(int) which;
	syscallarg(int) a2;
	syscallarg(int) a3;
	syscallarg(int) a4;
};

struct ibcs2_semsys_args {
	syscallarg(int) which;
	syscallarg(int) a2;
	syscallarg(int) a3;
	syscallarg(int) a4;
	syscallarg(int) a5;
};

struct ibcs2_ioctl_args {
	syscallarg(int) fd;
	syscallarg(int) cmd;
	syscallarg(caddr_t) data;
};

struct ibcs2_uadmin_args {
	syscallarg(int) cmd;
	syscallarg(int) func;
	syscallarg(caddr_t) data;
};

struct ibcs2_utssys_args {
	syscallarg(int) a1;
	syscallarg(int) a2;
	syscallarg(int) flag;
};

struct ibcs2_execve_args {
	syscallarg(char *) path;
	syscallarg(char **) argp;
	syscallarg(char **) envp;
};

struct ibcs2_fcntl_args {
	syscallarg(int) fd;
	syscallarg(int) cmd;
	syscallarg(char *) arg;
};

struct ibcs2_ulimit_args {
	syscallarg(int) cmd;
	syscallarg(int) newlimit;
};

struct ibcs2_rmdir_args {
	syscallarg(char *) path;
};

struct ibcs2_mkdir_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct ibcs2_getdents_args {
	syscallarg(int) fd;
	syscallarg(char *) buf;
	syscallarg(int) nbytes;
};

struct ibcs2_sysfs_args {
	syscallarg(int) cmd;
	syscallarg(caddr_t) d1;
	syscallarg(char *) buf;
};

struct ibcs2_getmsg_args {
	syscallarg(int) fd;
	syscallarg(struct ibcs2_stropts *) ctl;
	syscallarg(struct ibcs2_stropts *) dat;
	syscallarg(int *) flags;
};

struct ibcs2_putmsg_args {
	syscallarg(int) fd;
	syscallarg(struct ibcs2_stropts *) ctl;
	syscallarg(struct ibcs2_stropts *) dat;
	syscallarg(int) flags;
};

struct ibcs2_poll_args {
	syscallarg(struct ibcs2_pollfd *) fds;
	syscallarg(long) nfds;
	syscallarg(int) timeout;
};

struct ibcs2_symlink_args {
	syscallarg(char *) path;
	syscallarg(char *) link;
};

struct ibcs2_lstat_args {
	syscallarg(char *) path;
	syscallarg(struct ibcs2_stat *) st;
};

struct ibcs2_readlink_args {
	syscallarg(char *) path;
	syscallarg(char *) buf;
	syscallarg(int) count;
};

struct xenix_rdchk_args {
	syscallarg(int) fd;
};

struct xenix_chsize_args {
	syscallarg(int) fd;
	syscallarg(long) size;
};

struct xenix_ftime_args {
	syscallarg(struct xenix_timeb *) tp;
};

struct xenix_nap_args {
	syscallarg(int) millisec;
};

struct ibcs2_sigaction_args {
	syscallarg(int) sig;
	syscallarg(struct ibcs2_sigaction *) act;
	syscallarg(struct ibcs2_sigaction *) oact;
};

struct ibcs2_sigprocmask_args {
	syscallarg(int) how;
	syscallarg(ibcs2_sigset_t *) set;
	syscallarg(ibcs2_sigset_t *) oset;
};

struct ibcs2_sigpending_args {
	syscallarg(ibcs2_sigset_t *) mask;
};

struct ibcs2_sigsuspend_args {
	syscallarg(ibcs2_sigset_t *) mask;
};

struct ibcs2_getgroups_args {
	syscallarg(int) gidsetsize;
	syscallarg(ibcs2_gid_t *) gidset;
};

struct ibcs2_setgroups_args {
	syscallarg(int) gidsetsize;
	syscallarg(ibcs2_gid_t *) gidset;
};

struct ibcs2_sysconf_args {
	syscallarg(int) name;
};

struct ibcs2_pathconf_args {
	syscallarg(char *) path;
	syscallarg(int) name;
};

struct ibcs2_fpathconf_args {
	syscallarg(int) fd;
	syscallarg(int) name;
};

struct ibcs2_rename_args {
	syscallarg(char *) from;
	syscallarg(char *) to;
};

#undef	syscallarg

/*
 * System call prototypes.
 */

int	nosys	__P((struct proc *, void *, register_t *));
int	exit	__P((struct proc *, void *, register_t *));
int	fork	__P((struct proc *, void *, register_t *));
int	ibcs2_read	__P((struct proc *, void *, register_t *));
int	write	__P((struct proc *, void *, register_t *));
int	ibcs2_open	__P((struct proc *, void *, register_t *));
int	close	__P((struct proc *, void *, register_t *));
int	ibcs2_waitsys	__P((struct proc *, void *, register_t *));
int	ibcs2_creat	__P((struct proc *, void *, register_t *));
int	link	__P((struct proc *, void *, register_t *));
int	ibcs2_unlink	__P((struct proc *, void *, register_t *));
int	ibcs2_execv	__P((struct proc *, void *, register_t *));
int	ibcs2_chdir	__P((struct proc *, void *, register_t *));
int	ibcs2_time	__P((struct proc *, void *, register_t *));
int	ibcs2_mknod	__P((struct proc *, void *, register_t *));
int	ibcs2_chmod	__P((struct proc *, void *, register_t *));
int	ibcs2_chown	__P((struct proc *, void *, register_t *));
int	obreak	__P((struct proc *, void *, register_t *));
int	ibcs2_stat	__P((struct proc *, void *, register_t *));
int	compat_43_lseek	__P((struct proc *, void *, register_t *));
int	getpid	__P((struct proc *, void *, register_t *));
int	ibcs2_mount	__P((struct proc *, void *, register_t *));
int	ibcs2_umount	__P((struct proc *, void *, register_t *));
int	ibcs2_setuid	__P((struct proc *, void *, register_t *));
int	getuid	__P((struct proc *, void *, register_t *));
int	ibcs2_stime	__P((struct proc *, void *, register_t *));
int	ibcs2_alarm	__P((struct proc *, void *, register_t *));
int	ibcs2_fstat	__P((struct proc *, void *, register_t *));
int	ibcs2_pause	__P((struct proc *, void *, register_t *));
int	ibcs2_utime	__P((struct proc *, void *, register_t *));
int	ibcs2_access	__P((struct proc *, void *, register_t *));
int	ibcs2_nice	__P((struct proc *, void *, register_t *));
int	ibcs2_statfs	__P((struct proc *, void *, register_t *));
int	sync	__P((struct proc *, void *, register_t *));
int	ibcs2_kill	__P((struct proc *, void *, register_t *));
int	ibcs2_fstatfs	__P((struct proc *, void *, register_t *));
int	ibcs2_pgrpsys	__P((struct proc *, void *, register_t *));
int	dup	__P((struct proc *, void *, register_t *));
int	pipe	__P((struct proc *, void *, register_t *));
int	ibcs2_times	__P((struct proc *, void *, register_t *));
int	ibcs2_plock	__P((struct proc *, void *, register_t *));
int	ibcs2_setgid	__P((struct proc *, void *, register_t *));
int	getgid	__P((struct proc *, void *, register_t *));
int	ibcs2_sigsys	__P((struct proc *, void *, register_t *));
#ifdef SYSVMSG
int	ibcs2_msgsys	__P((struct proc *, void *, register_t *));
#else
#endif
#ifdef SYSVSHM
int	ibcs2_shmsys	__P((struct proc *, void *, register_t *));
#else
#endif
#ifdef SYSVSEM
int	ibcs2_semsys	__P((struct proc *, void *, register_t *));
#else
#endif
int	ibcs2_ioctl	__P((struct proc *, void *, register_t *));
int	ibcs2_uadmin	__P((struct proc *, void *, register_t *));
int	ibcs2_utssys	__P((struct proc *, void *, register_t *));
int	ibcs2_execve	__P((struct proc *, void *, register_t *));
int	umask	__P((struct proc *, void *, register_t *));
int	chroot	__P((struct proc *, void *, register_t *));
int	ibcs2_fcntl	__P((struct proc *, void *, register_t *));
int	ibcs2_ulimit	__P((struct proc *, void *, register_t *));
int	ibcs2_rmdir	__P((struct proc *, void *, register_t *));
int	ibcs2_mkdir	__P((struct proc *, void *, register_t *));
int	ibcs2_getdents	__P((struct proc *, void *, register_t *));
int	ibcs2_sysfs	__P((struct proc *, void *, register_t *));
int	ibcs2_getmsg	__P((struct proc *, void *, register_t *));
int	ibcs2_putmsg	__P((struct proc *, void *, register_t *));
int	ibcs2_poll	__P((struct proc *, void *, register_t *));
int	ibcs2_symlink	__P((struct proc *, void *, register_t *));
int	ibcs2_lstat	__P((struct proc *, void *, register_t *));
int	ibcs2_readlink	__P((struct proc *, void *, register_t *));
int	sigreturn	__P((struct proc *, void *, register_t *));
int	xenix_rdchk	__P((struct proc *, void *, register_t *));
int	xenix_chsize	__P((struct proc *, void *, register_t *));
int	xenix_ftime	__P((struct proc *, void *, register_t *));
int	xenix_nap	__P((struct proc *, void *, register_t *));
int	select	__P((struct proc *, void *, register_t *));
int	ibcs2_sigaction	__P((struct proc *, void *, register_t *));
int	ibcs2_sigprocmask	__P((struct proc *, void *, register_t *));
int	ibcs2_sigpending	__P((struct proc *, void *, register_t *));
int	ibcs2_sigsuspend	__P((struct proc *, void *, register_t *));
int	ibcs2_getgroups	__P((struct proc *, void *, register_t *));
int	ibcs2_setgroups	__P((struct proc *, void *, register_t *));
int	ibcs2_sysconf	__P((struct proc *, void *, register_t *));
int	ibcs2_pathconf	__P((struct proc *, void *, register_t *));
int	ibcs2_fpathconf	__P((struct proc *, void *, register_t *));
int	ibcs2_rename	__P((struct proc *, void *, register_t *));

#ifdef COMPAT_43
#define compat_43(func) __CONCAT(compat_43_,func)

#ifdef SYSVMSG
#else
#endif
#ifdef SYSVSHM
#else
#endif
#ifdef SYSVSEM
#else
#endif

#else /* COMPAT_43 */
#define compat_43(func) nosys
#endif /* COMPAT_43 */


#ifdef COMPAT_09
#define compat_09(func) __CONCAT(compat_09_,func)

#ifdef SYSVMSG
#else
#endif
#ifdef SYSVSHM
#else
#endif
#ifdef SYSVSEM
#else
#endif

#else /* COMPAT_09 */
#define compat_09(func) nosys
#endif /* COMPAT_09 */


#ifdef COMPAT_10
#define compat_10(func) __CONCAT(compat_10_,func)

#ifdef SYSVMSG
#else
#endif
#ifdef SYSVSHM
#else
#endif
#ifdef SYSVSEM
#else
#endif

#else /* COMPAT_10 */
#define compat_10(func) nosys
#endif /* COMPAT_10 */

