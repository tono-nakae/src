#	$NetBSD: Makefile.rumpkern,v 1.18 2008/11/17 08:53:12 pooka Exp $
#

.include "${RUMPTOP}/Makefile.rump"

LIB=		rump
LDFLAGS+=	-Wl,--wrap=malloc

.PATH:	${RUMPTOP}/librump/rumpkern				\
	${RUMPTOP}/../kern ${RUMPTOP}/../lib/libkern		\
	${RUMPTOP}/../conf ${RUMPTOP}/../dev			\
	${RUMPTOP}/../miscfs/genfs ${RUMPTOP}/../miscfs/syncfs

#
# Source modules, first the ones specifically implemented for librump.
# 
SRCS=	rump.c emul.c intr.c genfs_io.c locks.c ltsleep.c percpu.c	\
	pool.c sleepq.c specfs.c vfs.c vm.c
# stubs
SRCS+=	fstrans_stub.c misc_stub.c pmap_stub.c vfsops_stub.c

#
# Rest are from the std kernel sources.
#
# sys/kern
SRCS+=	kern_auth.c kern_descrip.c kern_malloc_stdtype.c kern_module.c	\
	kern_rate.c kern_stub.c kern_sysctl.c kern_timeout.c		\
	kern_uidinfo.c param.c sys_descrip.c sys_generic.c

# sys/kern subr (misc)
SRCS+=	subr_bufq.c subr_callback.c subr_hash.c subr_iostat.c		\
	subr_kobj.c subr_once.c subr_prf2.c subr_specificdata.c		\
	subr_time.c subr_workqueue.c

# sys/kern vfs
SRCS+=	vfs_bio.c vfs_cache.c vfs_dirhash.c vfs_getcwd.c vfs_hooks.c	\
	vfs_init.c vfs_lookup.c vfs_subr.c vfs_syscalls.c vfs_vnops.c	\
	vfs_wapbl.c vnode_if.c

# sys/miscfs
SRCS+=	genfs_vfsops.c genfs_vnops.c sync_subr.c

# sys/kern bufq
SRCS+=	subr_bufq.c bufq_disksort.c bufq_fcfs.c bufq_priocscan.c	\
	bufq_readprio.c

# sys/dev
SRCS+=	clock_subr.c

# src/lib/libkern
SRCS+=	__assert.c scanc.c skpc.c

SRCS+=	rumpvnode_if.c rump_syscalls.c

# uncomment these lines if you want to use the real kmem code
#CPPFLAGS+=	-DRUMP_USE_REAL_KMEM
#SRCS+=		subr_kmem.c subr_vmem.c

.if ${MACHINE_ARCH} == "vax"
.PATH:	${RUMPTOP}/../lib/libkern/arch/vax
SRCS+=	blkset.S
.endif

# no shlib_version because this is automatically in sync with lib/librump
SHLIB_MAJOR=    0
SHLIB_MINOR=    0

CPPFLAGS+=	-I${RUMPTOP}/librump/rumpkern/opt -DMAXUSERS=32
CPPFLAGS+=	-I${RUMPTOP}/librump/rumpnet
CFLAGS+=	-Wno-pointer-sign

.include <bsd.lib.mk>
.include <bsd.klinks.mk>
