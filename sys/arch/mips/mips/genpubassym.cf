#	$NetBSD: genpubassym.cf,v 1.1 1999/01/15 01:23:12 castor Exp $
#
# Copyright (c) 1998 The NetBSD Foundation, Inc.  All Rights Reserved.
# 
# This code is derived from software contributed to the NetBSD Foundation
# by Jonathan Stone from the file genassym.cf
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	from @(#)genassym.c	8.2 (Berkeley) 9/23/93
#
# Generate userland visible constants from internal kernel structures.
# This is source material for  sys/kern/genassym.sh

include <sys/param.h>
include <sys/buf.h>
include <sys/map.h>
include <sys/proc.h>
include <sys/mbuf.h>
include <sys/user.h>

include <vm/vm.h>

include <uvm/uvm_extern.h>

include <mips/regnum.h>
include <mips/vmparam.h>
include <mips/locore.h>

define	STAND_FRAME_SIZE	sizeof(mips_reg_t) * (4 + 2)
define	STAND_RA_OFFSET		sizeof(mips_reg_t) * 5


# standard callframe {
# 	register_t cf_args[4];		arg0 - arg3
# 	register_t cf_sp;		frame pointer
# 	register_t cf_ra;		return address
# };
# 
# trapframe synthesized on stack and pointed by 5th arg {
# 	register_t cf_args[4 + 2];	arg0 - arg3 and arg4 and arg5 (ignored)
# 	register_t cf_sp;		frame pointer on trap
# 	register_t cf_ra;		return address on trap
# 	mips_reg_t tf_regs[17];		- trapframe begin here
#	mips_reg_t tf_ra;		-
#	mips_reg_t tf_sr;		-
#	mips_reg_t tf_mullo;		-
#	mips_reg_t tf_mulhi;		-
#	mips_reg_t tf_epc;		- might be modified prior to return
# };

#define	CALLFRAME_SIZ	sizeof(struct callframe)
define	CALLFRAME_SIZ	sizeof(register_t) * (4 + 2)
define	CALLFRAME_SP	sizeof(register_t) * 4
define	CALLFRAME_RA	sizeof(register_t) * 5

define	_JBLEN			(sizeof(struct sigcontext)/sizeof(long))
define _OFFSETOF_SC_REGS	offsetof(struct sigcontext, sc_regs)
define _OFFSETOF_SC_FPREGS	offsetof(struct sigcontext, sc_fpregs)
define _OFFSETOF_SC_MASK	offsetof(struct sigcontext, sc_mask)
