To Do
=====
return userids from successful verify, and then print id out if required
error logging
separate from libcrypto?
64-bit offsets
default compression when signing?
Multiple recipients for encryption
convert tests from ./tst to the autotest ./tests/

Done
====
autoconf
libtool
name change
content_ naming scheme
Brief test script
get rid of C global
put all readers and writers together in one file
Add mmapped method
merge mmap'ed and fd reads - if mmap fails, fall back to read
Make sure all openpgpsdk changes are brought forward
look at header file fun
new version number in autoconf
Make decrypt work with files > 8192 bytes
dynamically size literal_data_body before decompressing?
restore ops_export_key functionality
match keyids using case insensitive matching - (c0596823 == C0596823)
use PRIsize appropriately
make a high-level interface
get rid of multiple local headers
get rid of long identifier names - all done internally now
Finish name change for everything
work out what's exported and what's not
finish off main header file
init(&netpgp, userid, pubring, secring)
__ops
real naming scheme
get rid of malloc() instances -> calloc()
change include directory
Install man pages
WARNS=4 (again)
detached sig
get rid of assert()s
disable core dumps
add a --help option
sha256 digests
print out size of key in --list-keys
decryption - print encrypted key info
get rid of local files
hash algorithm selection
detached verification
RCS Ids
Look at inefficiencies - read() etc
cat command to display a verified file without signature
get rid of ops_memory after used literal_data_body
new package for 1.99.4
separate verify program
Add --passwd-fd n argument
bring forward netpgpverify mods to netpgp
move directory locations in package and cvs repo
fix up tests for new directory locations
separate key management program
C++ guards in header file
modify sets lists for netpgpverify
don't require passphrase for keys without one
