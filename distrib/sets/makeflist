#!/bin/sh
#
# $NetBSD: makeflist,v 1.61 2003/06/23 09:18:45 dyoung Exp $
#
# Print out the files in some or all lists.
# Usage: makeflist [-b] [-x] [-a arch] [-m machine] [-s setsdir] [setname ...]
#

# set defaults
make="${MAKE:-make} -j 1 -f `dirname $0`/Makefile"
machine=`${make} print_machine`
machine_arch=`${make} print_machine_arch`
machine_cpu=`${make} print_machine_cpu`
object_fmt=`${make} print_object_fmt`
toolchain_missing=`${make} print_toolchain_missing`
x11_version=`${make} print_x11_version`
setd=`pwd`
nlists="base comp etc games man misc text"
xlists="xbase xcomp xcontrib xfont xserver xmisc"
lists=$nlists

. ./sets.subr

# handle args
while : ; do
	case $1 in
	-b*)
		lists="$xlists $nlists"
		;;
	-x*)
		lists=$xlists
		;;
	-a*)
		machine_arch=`MACHINE_ARCH=${2} ${make} print_machine_arch`
		machine_cpu=`MACHINE_ARCH=${2} ${make} print_machine_cpu`
		shift
		;;
	-m*)
		machine=$2; shift
		;;
	-s*)
		setd=$2; shift
		;;
	-*)
		cat 1>&2 <<USAGE
Usage: $0 [-b] [-x] [-a arch] [-m machine] [-s setsdir] [setname ...]
	-b		make netbsd + x11 lists
	-x		only make x11 lists
	-a arch		set arch (e.g, m68k, mipseb, mipsel, powerpc) [$machine_arch]
	-m machine	set machine (e.g, amiga, i386, macppc) [$machine]
	-s setsdir	directory to find sets [$setd]
	[setname ...]	sets to build [$lists]
USAGE
		exit 1
		;;
	*)
		break
		;;
	esac
	shift
done
if [ -n "$1" ]; then
	lists="$@"
fi

# Determine lib type.
if [ "$object_fmt" = "ELF" ]; then
	shlib=elf
else
	shlib=aout
fi
stlib=$shlib

# Turn off shlibs for some ports.
if [ "$machine_cpu" = "sh3" -o "$machine_arch" = "m68000" ]; then
	shlib=no
fi
lkm=yes
# Turn off LKMs for some ports.
if [ "$machine" = "evbppc" ]; then
	lkm=no
fi

# Turn off lintlibs for some ports.
# Not needed anymore, leave the hook here for future use.
lintlibs=

# Automatically add XFree86 version specific sets
for list in $lists
do
 if [ -z "$_lists" ]
 then
  _lists=$list
 else
  _lists="$_lists $list"
 fi
 if [ -d "$setd/lists/$list${x11_version}" ]
 then
  _lists="$_lists $list${x11_version}"
 fi
done
lists=$_lists
unset _lists

for setname in $lists; do
	list_set_files $setname
done | awk -- '/^[^#]/ {print $1}' | sort -u
