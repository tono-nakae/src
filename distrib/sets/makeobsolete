#!/bin/sh
#
# $NetBSD: makeobsolete,v 1.22 2003/12/29 03:13:25 lukem Exp $
#
# Print out the obsolete files for a set
# Usage: makeobsolete [-b] [-x] [-a arch] [-m machine] [-s setsdir] \
#    [-t target] [setname ...]
#

. $(dirname $0)/sets.subr
lists=$nlists
target=./dist
obsolete=1

usage()
{
	cat 1>&2 <<USAGE
Usage: ${0##*/} [-a arch] [-m machine] [-s setsdir] [setname ...]
	-b		make netbsd + x11 lists
	-x 		only make x11 lists
	-a arch		set arch (e.g, m68k, mips, powerpc)	[$machine_arch]
	-m machine	set machine (e.g, amiga, i386, macppc)	[$machine]
	-s setsdir	directory to find sets	[$setd]
	-t target	target directory [$target]
	[setname ...] 	sets to build
USAGE
	exit 1
}

while getopts bxa:m:s:t: ch; do
	case ${ch} in
	b)
		lists="$xlists $nlists"
		;;
	x)
		lists="$xlists"
		;;
	a)
		machine_arch=${OPTARG}
		machine_cpu=$(arch_to_cpu ${OPTARG})
		;;
	m)
		machine=${OPTARG}
		;;
	s)
		setsdir=${OPTARG}
		;;
	t)
		target=${OPTARG}
		;;
	*)
		usage
		;;
	esac
done
shift $((${OPTIND} - 1))
if [ -n "$1" ]; then
	lists="$*"
fi

if [ ! -d $target ] ; then
	echo "target directory [$target] doesn't exist"
	exit 1
fi

for setname in $lists; do
	file=$target/${setname}
	list_set_files $setname | awk '{print $1}' | sort -ru > $file
	if [ ! -s $file ] ; then
		rm $file
	fi
done
