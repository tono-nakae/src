.\"	$NetBSD: install,v 1.3 2000/10/27 00:42:57 mbw Exp $
.
.Ss2 Booting the installer
.
The syntax of the Open Firmware
.Pa `boot'
command is:
.br
.Nm boot
.Ar device Ns
.Op Ar :partition 
.Op Ar ,filename
.Op Fl as No | Ar kernel_location No Op Ar Fl as
.Pp
where the `-a' flag will ask you for the location of the next item to load (i.e. 
.Pa `ofwboot.xcf' 
will ask where the kernel is, or the kernel will ask where the root filesystem is).
The `-s' flag will boot in `single-user mode'.  The `kernel_location' is either
a filename if the kernel is on the same partition as the bootloader, or another
complete device:partition,filename.  And, there's no reason (other than OF 
bugginess) that you can't specify an entirely different device for the kernel.
For instance, you could have a MacOS drive on your ultra0 (ATA) bus, and a 
.Nx
drive on your ultra1 bus.
.Pp
The exact command you will be using depends on which version of Open Firmware
your machine has and which device you will be booting from.  You can find out
what device aliases OF has on your machine by typing:
.br
.Dl 0 > Ic devalias
.Pp
To get a complete listing of what hardware is recognized by OF, type:
.Dl 0 > Ic dev / ls
.Pp
To determine if a device is bootable, type:
.Dl 0 > Ic dev /path/to/device
.Dl 0 > Ic words
If the word
.Pa `open'
is in the list of words, then this device might be bootable.
.Pp
SCSI disks are usually of the form:
.Nm boot
.Ar scsi_devalias Ns No /sd@ Ns Ar i:p
.br
where `scsi_devalias' is the Open Firmware
.Pa `devalias'
for your SCSI interface, `i' is the SCSI ID, and `p' is the partition.
.Pp
.(bullet -compact -offset indent
.Em Floppy disk
.br
The floppy disk has a `partition zero' bootloader.  All you need to do is:
.br
.Dl 0 > Ic boot fd:0
.Pp
You can eject a floppy by typing:
.Dl 0 > Ic eject fd
.Pp
.It
.Em Ethernet
.br
You only specify that you are booting from the ethernet:
.Dl 0 > Ic boot enet Li    # for OF 1.x and 2.x
.Dl 0 > Ic boot enet:0 Li  # for OF 3
To make configuring your netboot server easier, you may specify the 
bootloader filename and the kernel name:
.Dl 0 > Ic boot enet:,ofwboot.xcf enet:,netbsd.ram.gz Li      # for OF 1.x and 2.x
.Dl 0 > Ic boot enet:0,ofwboot.xcf enet:0,netbsd.ram.gz Li    # for OF 3
.Pp
.It
.Em CD-ROM
.br
OF doesn't understand long filenames (created with the RockRidge and Joliet 
extensions), so you may need to figure out what your file is called.  For instance,
Toast for MacOS creates CDs with long filenames, but uses `DOS' style short names
as well.  Instead of referencing 
.Pa `netbsd-GENERIC'
you would need to open
.Pa `NETBSD-G.ENE'
.Pp
The
.Pa mkisofs
and
.Pa mkhybrid
programs have a similar problem.  For them, 
.Pa `netbsd.ram.gz'
becomes
.Pa `NETBSD_RAM.GZ'
.Pp
Another thing to note is that you
.Em must
use capital letters when specifying the filename to load.
Also, keep in mind what format your CD-R has to be for your version of OF 
(pure ISO versus hybrid ISO/HFS) before giving up.
.Pp
Here are some examples of what you might use to boot from CD-ROM:
.Dl 0 > Ic boot scsi-int/sd@3:0,OFWBOOT.XCF NETBSD.RAM
.Dl 0 > Ic boot scsi/sd@3:0,OFWBOOT.XCF NETBSD.RAM
.Dl 0 > Ic boot scsi-ext/sd@3:0,OFWBOOT.XCF NETBSD.RAM
.Dl 0 > Ic boot ata/atapi-disk:0,OFWBOOT.XCF NETBSD.RAM
.Dl 0 > Ic boot ide1/disk@0:0,OFWBOOT.XCF NETBSD.RAM
.Dl 0 > Ic boot cd:0,OFWBOOT.XCF NETBSD.RAM
.Pp
.It
.Em IDE or SCSI drive with a `partition zero' bootloader
.br
(OF 1.x and 2.x only).
.br
You do not specify a file to load, since the `partition zero' booloader knows
what to do.  You would boot such a system if you have dumped the boot floppy
image to your drive, or if you have an already-installed
.Nx*M
system
.Pp
Remember, that SCSI Zip disks are usually ID 5 or 6.  Internal hard drives 
are usually SCSI ID 0.
.Pp
Here are some examples of what you might use to boot from such a drive:
.Dl 0 > Ic boot scsi-int/sd@0:0
.Dl 0 > Ic boot scsi/sd@0:0
.Dl 0 > Ic boot scsi-ext/sd@0:0
.Dl 0 > Ic boot ata/ata-disk@0:0
.Dl 0 > Ic boot ata/ATA-Disk@0:0
.Dl 0 > Ic boot ide0/disk@0:0
.Dl 0 > Ic boot zip:0
.Pp
.It
.Em IDE or SCSI drive from an HFS(+) partition
.br
(OF 2.4 and 3 only).
.br
 MacOS drives have several system-level `partitions' reserved for MacOS drivers.
You may find that your first HFS(+) partition might be as high as partition 9.  
You may need to keep trying higher partition numbers until you find the one
that has your bootloader.
.Pp
Also, since the bootloader is on a different partition from the
.Nx
kernel, you will need to specify where to find the kernel.
.Pp
Remember, that SCSI Zip disks are usually ID 5 or 6.  Internal hard drives 
are usually SCSI ID 0.
.Pp
Here are some examples of what you might use to boot from such a drive:
.Dl 0 > Ic boot scsi/sd@0:9,ofwboot.xcf scsi/sd@0:10,netbsd
.Dl 0 > Ic boot ide0/disk@0:7,ofwboot.xcf ide0/disk@0:9,ofwboot.xcf
.Dl 0 > Ic boot hd:8,ofwboot.xcf ultra1:3,netbsd
.bullet)
.
.Ss2 Common Problems and Error Messages
See the
.Nx*M
FAQ for a thorough list.
.Lk http://www.netbsd.org/Ports/macppc/faq.html
.(bullet -compact -offset indent
.Pa `DEFAULT CATCH!'
.Pp
If your machine is Open Firmware version 1.0.5 or 2.X, this error does 
sometimes appear randomly. You might try the boot command a second time (this is known to
work on some models). Otherwise, if you are not using a serial console, there
might be a conflict between the screen driver and Open Firmware which prevents OF
from loading 
.Pa ofwboot.xcf
There are several models that cannot be booted while
using the screen and keyboard. The only known workaround is to use a serial console
(i.e. set your input and output devices to ttya or ttyb).
.Dl 0 > Ic setenv output-device ttya
.Dl 0 > Ic setenv input-device ttya
.Dl 0 > Ic reset-all
.Pp
.It
.Pa `CLAIM failed'
.Pp
This is a general message from Open Firmware to the effect that it failed 
to allocate some memory. There are several known causes for this to happen. 
.Pp
This often means that the memory is messed up. If you tried something and
it failed, then you tried another and got a 
.Pa `CLAIM failed'
message, then this is an indication that you should reboot between attempts
.Pp
If your machine is Open Firmware version 1.0.5 or 2.X, this error does 
sometimes appear randomly. You might try the boot command a second time (this is known to
work on some models). Otherwise, if you are not using a serial console, there
might be a conflict between the screen driver and Open Firmware which prevents OF
from loading 
.Pa ofwboot.xcf
There are several models that cannot be booted while
using the screen and keyboard. The only known workaround is to use a serial console
(i.e. set your input and output devices to ttya or ttyb).
.Dl 0 > Ic setenv output-device ttya
.Dl 0 > Ic setenv input-device ttya
.Dl 0 > Ic reset-all
.Pp
.It
.Pa `can't OPEN'
.Pp
OF either can't open the device you specified (because it is not present or
the device path is mistyped) or the file you specified.  Check your typing
and check to make sure that the media has the files you think it has.
.Pp
.It
.Pa `unrecognized Client Program formatstate not valid'
.Pp
This is a general Open Firmware error message indicating that the filename
you tried to open either doesn't exist or is in the wrong format.  For 
OF 1.x and 2.x machines, it must be an XCOFF file (such as
.Pa `ofwboot.xcf')
and for OF 3 machines, it must be either XCOFF or ELF (such as a kernel).
.Pp
.It
Black screen
.Pp
You need a serial console.  See the section entitled
.Sx Open Firmware 1.0.5 or 2.0.x System Preparation
.Pp
.It
Grey screen with flashing question mark
.Pp
You mistyped the path to a device, and your system defaulted to
booting into MacOS.  The flashing question mark means that the MacOS
ROM has loaded and is looking for a bootable MacOS filesystem.
.Pp
.It
.Pa ofwboot.xcf
hangs before the copyright notice and the kernel configuration
.Pp
You forgot to set 
.Pa `real-base'
in OF or it got erased by your booting into MacOS.
.Dl 0 > Ic setenv load-base 600000
.Dl 0 > Ic setenv real-base F00000
.Dl 0 > Ic reset-all
.Pp
.It
After the kernel loads, the first key you press repeats forever
.Pp
Press the shift key first.
.Pp
.It
Hang after configuring devices, but before doing anything else
.Pp
Plug the USB keyboard directly into the computer (i.e. not through a hub)
.Pp
.It
.Pa `pciide0:0:0: lost interrupt'
.Pp
See 
.Lk http://www.netbsd.org/Ports/macppc/faq.html#pciide-lost-interrupt
.Pp
.It
.Pa `Panic: mesh: FIFO != 0'
.Pp
Try unplugging your Zip drive.  If that doesn't work, see
.Lk http://www.netbsd.org/Ports/macppc/faq.html#mesh-fifo
.bullet)
.
.so ../common/sysinst
