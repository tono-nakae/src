#!/bin/sh -
#
#	$NetBSD: MAKEDEV,v 1.1 2002/06/06 20:35:38 fredette Exp $
#
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	@(#)MAKEDEV	5.5 (Berkeley) 5/28/91
#
###########################################################################
#
#   PLEASE RUN "cd ../share/man/man8 ; perl5 MAKEDEV2manpage.pl"
#   AFTER CHANGING THIS FILE, AND COMMIT THE UPDATED MANPAGE!
#
###########################################################################
#
# Device "make" file.  Valid arguments:
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	st*	SCSI tape
# Disks:
#	sd*	SCSI disks
#	vnd*	"file" pseudo-disks
#	ccd*	concatenated disk driver
#	raid*	RAIDframe disk driver
#	md*	memory pseudo-disk devices
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
# Special purpose devices:
#	bpf*	packet filter
#	lkm	loadable kernel modules interface
#	tun*	network tunnel driver
#	random	Random number generator
#	scsibus* SCSI busses, see scsictl(8), scsi(4)

PATH=/sbin:/bin:/usr/sbin:/usr/bin
umask 77

# set this to echo for Echo-Only debugging
eo=

# mk name b/c major minor [mode] [group]
mk() {
	$eo rm -f $1
	$eo mknod $1 $2 $3 $4
	$eo chmod ${5-666} $1
	test -n "$6" && $eo chgrp $6 $1
	return 0
}

for arg
do

unit=`expr $arg : '[a-z][a-z]*\([0-9][0-9]*\)'`
[ "$unit" ] || unit=0

case $arg in

all)
	sh $0 std pty0 pty1 pty2 pty3
	sh $0 raid0 raid1 raid2 raid3
	sh $0 sd0 sd1 sd2 sd3 sd4 sd5 sd6
	sh $0 cd0 cd1 st0 st1 st2 md0 md1
	sh $0 vnd0 vnd1 vnd2 vnd3 ccd0 ccd1 ccd2 ccd3
	sh $0 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	sh $0 tun0 tun1
	sh $0 lkm random
	sh $0 scsibus0 scsibus1 scsibus2 scsibus3
	sh $0 local
	;;

std)
	mk console	c 0 0 622
	mk tty		c 1 0

	mk mem		c 2 0 640 kmem
	mk kmem		c 2 1 640 kmem
	mk null		c 2 2
	mk zero		c 2 12
	mk drum		c 3 0 640 kmem

	mk klog		c 6 0 600
	mk stdin	c 16 0
	mk stdout	c 16 1
	mk stderr	c 16 2
	;;

bpf*)
	mk bpf$unit c 17 $unit 600
	;;

tun*)
	mk tun$unit c 18 $unit 600
	;;

pty*)
	class=${arg#pty}
	case $unit in
	0)      name=p;;
	1)      name=q;;
	2)      name=r;;
	3)      name=s;;
	4)      name=t;;
	5)      name=u;;
	6)      name=v;;
	7)      name=w;;
	8)      name=x;;
	9)      name=y;;
	10)     name=z;;
	11)     name=P;;
	12)     name=Q;;
	13)     name=R;;
	14)     name=S;;
	15)     name=T;;
	*)      echo "$0: $i: pty unit must be between 0 and 15"
	        continue ;;
	esac
	rm -f tty$name[0-9a-f] pty$name[0-9a-f]
	for j in 0 1 2 3 4 5 6 7 8 9 a b c d e f
	do
		case $j in
		[0-9])  jn=$j ;;
		a)      jn=10 ;;
		b)      jn=11 ;;
		c)      jn=12 ;;
		d)      jn=13 ;;
		e)      jn=14 ;;
		f)      jn=15 ;;
		esac
		unit=$(($class * 16 + $jn))
		mknod tty$name$j c 4 $unit
		mknod pty$name$j c 5 $unit
	done
        chgrp wheel tty$name? pty$name?
        chmod 666 tty$name? pty$name?
	;;

raid*)
# XXX fredette - need to reenable raid below, readd to case arm:
	;;

ccd*|cd*|fd*|sd*|vnd*)
	case $arg in
	  ccd*) name=ccd; blk=1; chr=7;;
	  cd*) name=cd; blk=6; chr=12;;
	  fd*) name=fd; blk=7; chr=24;;
#	  raid*) name=raid; blk=25; chr=82;;
	  sd*) name=sd; blk=4; chr=10;;
	  vnd*) name=vnd; blk=2; chr=8;;
	esac
	case $unit in
	  [0-7]) offset=$(($unit * 8));;
	  *) echo bad unit for $name in: $arg;;
	esac
	for part in a.0 b.1 c.2 d.3 e.4 f.5 g.6 h.7
	do
	(
		tmp="$IFS" ; IFS="$IFS."
		set -- $part
		IFS="$tmp" ; unset tmp
		minor=$(($offset + $2))
		mk  $name$unit$1 b $blk $minor 640 operator
		mk r$name$unit$1 c $chr $minor 640 operator
	)
	done
	;;

st*)
	name=st; blk=5; chr=11;
	mk   r$name$unit c $chr $(($unit * 16 + 0)) 660 operator
	mk  nr$name$unit c $chr $(($unit * 16 + 1)) 660 operator
	mk  er$name$unit c $chr $(($unit * 16 + 2)) 660 operator
	mk enr$name$unit c $chr $(($unit * 16 + 3)) 660 operator
	;;

# XXX fredette - MD devices could go here:

md*)
# XXX fredette - need to put in MD:
#	name=md; blk=13; chr=52;
#	mk  md${unit}a b $blk $(($unit * 8 + 0)) 640 operator
#	mk  md${unit}c b $blk $(($unit * 8 + 2)) 640 operator
##	mk rmd${unit}a c $chr $(($unit * 8 + 0)) 640 operator
##	mk rmd${unit}c c $chr $(($unit * 8 + 2)) 640 operator
	;;

lkm)
	mk lkm c 19 0 640 kmem
	;;

random)
	mk  random c 20 0 444
	mk urandom c 20 1
	;;

scsibus*)
# XXX fredette - need to put in scsibus:
#	mk scsibus${unit} c 81 $unit 644 wheel
	;;

local)
	umask 0
	sh $0.local all
	umask 77
	;;
*)
	echo $arg: unknown device
	;;

esac
done

